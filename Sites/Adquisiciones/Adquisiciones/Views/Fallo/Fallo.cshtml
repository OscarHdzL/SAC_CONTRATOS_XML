@using Microsoft.Extensions.Options;
@using Microsoft.AspNetCore.Http;
@using System.Net.Http;
@using Newtonsoft.Json.Linq;
@using Newtonsoft.Json;
@using Modeloprogramacion = SistemaDeAdquisiciones.Models.tbl_programacion;
@inject IHttpContextAccessor HttpContextAccessor;
@using SistemaDeAdquisiciones = SistemaDeAdquisiciones;
@inject IOptions<SistemaDeAdquisiciones.EndPoint> OptionsApplicationConfiguration

@model Guid
@{
    ViewBag.Title = "Fallo";
    ViewBag.Description = "Fallo";
    Layout = "~/Views/MasterPages/Master.cshtml";
}

@section ViewScripts{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script src="~/Resources/Funcionarios publicos/Jquery.Funcionarios.js"></script>
    <script src="~/Resources/Observadores/Jquery.Observadores.js"></script>
    <script src="~/Resources/Fallo/Jquery.Fallo.js"></script>
}
@section ViewStyles{
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
}


@{
    string evento = null;
    string direccion = null;
    string estado = null;
    string municipio = null;
    HttpClient clienteHttp = new HttpClient();

    clienteHttp.BaseAddress = new Uri(OptionsApplicationConfiguration.Value.EndPointGateway);
    clienteHttp.DefaultRequestHeaders.Accept.Clear();
    clienteHttp.DefaultRequestHeaders.TryAddWithoutValidation("Content-Type", "application/json; charset=utf-8");

    //se
    HttpResponseMessage request = await clienteHttp.GetAsync("Eventos/Get/Solicitud/" + @Model + "/SiglaTipoEvento/AF");
    Modeloprogramacion obj_Programacion = new Modeloprogramacion();

    if (request.IsSuccessStatusCode)
    {
        String obj = await request.Content.ReadAsStringAsync();
        obj_Programacion = JsonConvert.DeserializeObject<Modeloprogramacion>(obj);

        if (obj_Programacion != null)
        {
            <input type="hidden" value="@obj_Programacion.id" id="HD_programacion" />
            evento = obj_Programacion.Fecha_Evento.ToShortDateString();
            direccion = obj_Programacion.Direccion.ToString();
            estado = obj_Programacion.Estado.ToString();
            municipio = obj_Programacion.ciudad.ToString();
        }
        else
        {
            <input type="hidden" value="" id="HD_programacion" />
        }


    }

}

<input type="hidden" value="AF" id="Sigla_Programacion" />
<input type="hidden" value="@Model" id="_SOLICITUD" />
<input type="hidden" value="" id="idProveedor" />
<input type="hidden" value="fallo" id="_TIPOACTA" />

@*
    <input type="hidden" value="@Sol.ToString()" id="HDSOL_Agenda" />
    <input type="hidden" value="@NumProgra.ToString()" id="HD_programacion" />
*@



<div class="box box-default exist">

    <div class="box-body">
        @*<h3 class="box-title">Acta de visita a Sitio</h3>*@

        <div class="row">
            <div class="col-lg-12 text-center">
                <h3>Acta de fallo con fecha: <label class="fecha_event">@evento</label> </h3>
            </div>
        </div>


    </div>
</div>

<div class="box box-default exist">
    <div class="box-body">
        <div class="row">
            <div class="col-lg-3">
                <label>Fecha:</label>
                <input type="text" class="form-control" id="txt_FechaFallo" disabled value="@evento" />
            </div>
            <div class="col-lg-3">
                <label>Dirección:</label>
                <input type="text" class="form-control" id="txtDireccion" disabled value="@direccion" />
            </div>
            <div class="col-lg-3">
                <label>Estado:</label>
                <input type="text" class="form-control" id="txtEstado" disabled value="@estado" />
            </div>
            <div class="col-lg-3">
                <label>Municipio:</label>
                <input type="text" class="form-control" id="txtMunicipio" disabled value="@municipio" />
            </div>
        </div>
    </div>
</div>

<div class="box box-default collapsed-box exist">

    <div class="box-header with-border">
        <h3 class="box-title">Lista de participantes ganadores</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>

        </div>
    </div>

    <div class="box-body">

        <div class="row air" style="margin-top: 4%;">
            <div class="col-lg-12">
                <table id="tbl_Ganadores" class="display" style="width:100%">
                    <thead>
                        <tr>
                            <th>Licitante</th>
                            <th>Representante</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>


    </div>
</div>

<div class="box box-default collapsed-box exist">

    <div class="box-header with-border">
        <h3 class="box-title">Lista de participantes con incumplimiento</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>

        </div>
    </div>

    <div class="box-body">
        <div class="row air" style="margin-top: 4%;">
            <div class="col-lg-12">
                <table id="tbl_incumplimiento" class="display" style="width:100%">
                    <thead>
                        <tr>
                            <th>Licitante</th>
                            <th>Representante</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>

    </div>
</div>

<div class="box box-default collapsed-box exist">

    <div class="box-header with-border">
        <h3 class="box-title">Alta de funcionarios públicos</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>

        </div>
    </div>

    <div class="box-body">

        @await Html.PartialAsync("~/Views/Funcionario/Index.cshtml")
        @*@Html.Partial("~/Views/FuncionarioConv/Index.cshtml", Model)*@

    </div>
</div>

<div class="box box-default collapsed-box exist">

    <div class="box-header with-border">
        <h3 class="box-title">Alta de observadores</h3>

        <div class="box-tools pull-right">
            <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>

        </div>
    </div>

    <div class="box-body">

        @await Html.PartialAsync("~/Views/Observador/Index.cshtml")
        @*@Html.Partial("~/Views/Observador/Index.cshtml", Model)*@

    </div>

</div>

<div class="box box-default ">
    <div class="box-body">
        <div class="row">
            <div class="col-lg-12 text-center">
                <button class="btn btn-info" onclick="CallModalProgramacion();">Reprogramar un fallo</button>
                <button class="btn btn-info exist" onclick="GenerarFallo();">Generar un fallo</button>
                <input type="button" class="btn btn-danger" id="Cerra15" onclick="GoBandeja();" value="Cancelar" />
            </div>
        </div>
    </div>
</div>


